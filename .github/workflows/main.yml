name: "Pick Reviewer"

on:
  pull_request:
    types: opened

jobs:
  pick-random-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pick random reviewer
        id: pick_random_reviewer
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            const developers = JSON.parse(fs.readFileSync(`${{ github.workspace }}/.github/workflows/reviewer.json`));
            const prCreator = context.payload.pull_request.user.login;
            const prUrl = context.payload.pull_request.html_url;
            const prCreatorJson = developers.reviewers.find(person => person.githubName === prCreator);

            if (developers.length <= 1) {
              core.setOutput('reviewers', developers.reviewers[0]);
              core.setOutput('writer', prCreatorJson.name);
              core.setOutput('pullRequestLink', prUrl);
            } else {
              const candidateInternalReviewers = developers.reviewers.filter(person => person.team === prCreatorJson.team);
              const candidateExternalReviewers = developers.reviewers.filter(person => person.team !== prCreatorJson.team);

              const randomReviewer1 = candidateInternalReviewers[Math.floor(Math.random() * candidateInternalReviewers.length)];
              const randomReviewer2 = candidateExternalReviewers[Math.floor(Math.random() * candidateExternalReviewers.length)];
              console.log(JSON.stringify(randomReviewer1));
              core.setOutput('reviewer1', JSON.stringify(randomReviewer1));
              core.setOutput('reviewer2', JSON.stringify(randomReviewer2));
              core.setOutput('writer', JSON.stringify(prCreatorJson.name));
              core.setOutput('pullRequestLink', JSON.stringify(prUrl));
            }

      - name: Add Reviewers
        uses: madrapps/add-reviewers@v1
        with:
          reviewers: "${{ steps.pick_random_reviewer.outputs.reviewer1.githubName }}, ${{ steps.pick_random_reviewer.outputs.reviewer2.githubName }}"
          token: ${{ secrets.GITHUB_TOKEN }}
      

      - name: Send Slack Trigger
        run: |
          curl -X POST https://api-slack.internal.bcsdlab.com/api/review-request/frontend \
          -H 'Content-Type: application/json' \
          -d '{
                "pullRequestLink": "${{ steps.pick_random_reviewer.outputs.pullRequestLink }}",
                "writer": "${{ steps.pick_random_reviewer.outputs.writer }}",
                "reviewers": ["${{ steps.pick_random_reviewer.outputs.reviewer1.name }}", "${{ steps.pick_random_reviewer.outputs.reviewer2.name }}"]
              }'
